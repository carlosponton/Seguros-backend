// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Seguros.Models;

namespace Seguros.Migrations
{
    [DbContext(typeof(SecureContext))]
    [Migration("20181116044409_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Seguros.Models.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(300);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Client");

                    b.HasData(
                        new { Id = 1, Email = "jane@prueba.com", LastName = "Austen", Name = "Jane" },
                        new { Id = 2, Email = "charles@prueba.com", LastName = "Dickens", Name = "Charles" },
                        new { Id = 3, Email = "miguel@prueba.com", LastName = "Cervantes", Name = "Miguel" }
                    );
                });

            modelBuilder.Entity("Seguros.Models.Policy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClientId")
                        .HasMaxLength(300);

                    b.Property<int>("Danger")
                        .HasMaxLength(300);

                    b.Property<DateTime>("Date")
                        .HasMaxLength(300);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<int>("Period")
                        .HasMaxLength(300);

                    b.Property<int>("TypeId")
                        .HasMaxLength(300);

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("TypeId");

                    b.ToTable("Policy");

                    b.HasData(
                        new { Id = 1, ClientId = 1, Danger = 3, Date = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Description = "Se está haciendo una prueba", Name = "Prueba1", Period = 12, TypeId = 1 }
                    );
                });

            modelBuilder.Entity("Seguros.Models.Type", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Percentage")
                        .HasMaxLength(100);

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Type");

                    b.HasData(
                        new { Id = 1, Percentage = 10.0, Value = "Terremoto" },
                        new { Id = 2, Percentage = 20.0, Value = "Incendio" },
                        new { Id = 3, Percentage = 30.0, Value = "Pérdida" }
                    );
                });

            modelBuilder.Entity("Seguros.Models.Policy", b =>
                {
                    b.HasOne("Seguros.Models.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Seguros.Models.Type", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
